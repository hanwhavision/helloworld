name: MOPL_AWS_DinD_Build
run-name: ${{ github.actor }} is building out GitHub Actions 🚀
on:
  workflow_dispatch:
    inputs:
      SERVICE_NAME:
        description: '빌드할 서비스를 선택하세요.'
        required: true
        default: 'admin-frontend'
        type: choice
        options:
        - admin-frontend
        - apartment-service
        - vote-service
        - audit-service
        - authn-service
        - device-service
        - forum-service
        - reservation-service
        - verification-service
        - user-service

      ENVPREFIX:
        required: true
        default: 'prod'
        type: choice
        options:
        - prod
        - QA        

      DOCKER_PUSH:
        description: '빌드된 Docker 이미지를 aws에 Push하고 TAG정보를 업데이트 할 지 선택합니다.'
        type: boolean
        required: true
        default: false
  
jobs:
  Build-GitHub-Actions:
    runs-on: ubuntu-latest
    env:
      build_path: ./smartparking-gitops/${{ inputs.SERVICE_NAME }}
    container:
        image: ghcr.io/backend-sw-development-team4/aws_ecr:1.0.2
        options: --user root
        credentials:
           username: hyunsu.kang
           password: ${{  secrets.PACKAGE_CONTAINER_AUTH }}
    steps:
      - run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "SERVICE_NAME: $SERVICE_NAME"
          echo "ENVPREFIX: $ENVPREFIX"
          echo "DOCKER_PUSH: $DOCKER_PUSH"
        env:
          SERVICE_NAME: ${{ inputs.SERVICE_NAME }}
          ENVPREFIX: ${{ inputs.ENVPREFIX }}
          DOCKER_PUSH: ${{ inputs.DOCKER_PUSH }}

      - name: Set BRANCH ENVPREFIX is prod
        if: ${{ inputs.ENVPREFIX }} == 'prod'
        run: |
          echo "ENVPREFIX_BRANCH=main" >> "$GITHUB_ENV"
          echo "ENVPREFIX_lowcase=prod" >> "$GITHUB_ENV"

      - name: Set BRANCH ENVPREFIX is QA
        if: ${{ inputs.ENVPREFIX }} == 'QA'
        run: |
          echo "ENVPREFIX_BRANCH=release" >> "$GITHUB_ENV"
          echo "ENVPREFIX_lowcase=qa" >> "$GITHUB_ENV"

      - run: |
          echo "ENVPREFIX_BRANCH: $ENVPREFIX_BRANCH"
    
      - name: Check out repository code - helloworld
        uses: actions/checkout@v3

      - name: Check out repository code - smartparking-gitops
        uses: actions/checkout@v3
        with:
          repository: backend-sw-development-team4/smartparking-gitops
          path: smartparking-gitops
          ref: main
          token: ${{  secrets.PACKAGE_CONTAINER_AUTH }}

      - name: Check out repository code - service_name
        uses: actions/checkout@v3
        with:
          repository: backend-sw-development-team4/${{ inputs.SERVICE_NAME }}
          path: smartparking-gitops/${{ inputs.SERVICE_NAME }}
          ref: ${{ env.ENVPREFIX_BRANCH }}
          token: ${{ secrets.PACKAGE_CONTAINER_AUTH }}

      - name: Check out repository code - gitops
        uses: actions/checkout@v3
        with:
          repository: backend-sw-development-team4/smartparking-gitops
          path: smartparking-gitops/gitops
          ref: main
          token: ${{ secrets.PACKAGE_CONTAINER_AUTH }}

      - run: |
          echo build_path: ${{ env.build_path }}
          echo github.workspace: ${{ github.workspace }}

      - run: |
          sudo service docker start

      - run: |
          BUILD_START_TIME=`date '+%Y%m%d_%H%M%S'`
          IMAGE_TAG="${{ env.ENVPREFIX_lowcase }}-$BUILD_START_TIME-R${{ github.run_number }}"
          AWS_DEFAULT_REGION="ap-northeast-2"
          AWS_ACCOUNT_ID="852637827699"
          IMAGE_REPO_NAME="mopl/${{ inputs.SERVICE_NAME }}"

          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
          docker build --network=host -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
        working-directory: ${{ env.build_path }}


